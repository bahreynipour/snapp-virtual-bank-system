services:
    nginx:
        build:
            context: .
            dockerfile: ./docker/nginx.Dockerfile
        depends_on:
            - php
            - mariadb
        container_name: ${APP_NAME}-nginx
        ports:
            - 80:80
            - 443:443
        networks:
            - web
        volumes:
            - ./src:/var/www/html

    php:
        build:
            context: .
            dockerfile: ./docker/php.Dockerfile
        container_name: ${APP_NAME}-php
        volumes:
            - ./src:/var/www/html
        networks:
            - web

    mariadb:
        image: mariadb:10.11
        platform: linux/amd64
        container_name: ${APP_NAME}-mariadb
        ports:
            - 3306:3306
        volumes:
            - ./.infrastructure/volume_data/mariadb/database_data/:/var/lib/mysql
        environment:
            MYSQL_DATABASE: local
            MYSQL_USER: root
            MYSQL_PASSWORD: root
            MYSQL_ROOT_PASSWORD: root
        networks:
            - web

    composer:
        image: composer:latest
        container_name: ${APP_NAME}-composer
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        networks:
            - web

    artisan:
        build:
            context: .
            dockerfile: ./docker/php.Dockerfile
        container_name: ${APP_NAME}-artisan
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        entrypoint: ['php', 'artisan']
        networks:
            - web

    npm:
        image: node:current-alpine
        container_name: ${APP_NAME}-npm
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        entrypoint: ['npm']
        networks:
            - web

    phpmyadmin:
        restart: always
        build:
            context: .
            dockerfile: ./docker/phpmyadmin.Dockerfile
        container_name: ${APP_NAME}-phpmyadmin
        depends_on:
            - mariadb
        ports:
            - ${PHPMYADMIN_PORT}:80
        networks:
            - web
networks:
    web:
        name: ${APP_NAME}_network
